{"version":3,"file":"static/js/232.26001d58.chunk.js","mappings":"yQAGaA,EAAQC,EAAAA,GAAAA,GAAH,gDAILC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,uMAWVG,EAASH,EAAAA,GAAAA,OAAH,oXAoBNI,EAAQJ,EAAAA,GAAAA,MAAH,qEAKLK,GAAQL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,iFAMLO,GAAQP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,+D,6BCnCZS,EAAgB,CAAEC,MAAO,GAAIC,SAAU,IAEvCC,EAASC,EAAAA,KAAaC,MAAM,CAChCJ,MAAOG,EAAAA,KAEJH,MAAM,iBACNK,SAAS,6BACZJ,SAAUE,EAAAA,KAEPG,IAAI,GACJC,IAAI,IACJF,SAAS,kCAGDG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,MACfC,GAAkBD,EAAAA,EAAAA,MAOxB,OACE,iCACE,SAACvB,EAAD,+CACA,SAAC,KAAD,CACEU,cAAeA,EACfe,SAVe,SAAC,EAAD,GAAyC,IAAtCd,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAcc,EAAgB,EAAhBA,UAC3CN,GAASO,EAAAA,EAAAA,IAAM,CAAEhB,MAAAA,EAAOC,SAAAA,KACxBc,GACD,EAQKE,iBAAkBf,EAHpB,UAKE,UAACX,EAAD,YACE,SAACG,EAAD,CAAOwB,QAASP,EAAhB,oBACA,SAAChB,EAAD,CAAOwB,KAAK,OAAOC,KAAK,QAAQC,GAAIV,KACpC,SAACd,EAAD,CAAOyB,UAAU,OAAOF,KAAK,WAC7B,SAAC1B,EAAD,CAAOwB,QAASL,EAAhB,uBACA,SAAClB,EAAD,CACEwB,KAAK,WACLC,KAAK,WACLC,GAAIR,EACJU,aAAa,SAEf,SAAC1B,EAAD,CAAOyB,UAAU,OAAOF,KAAK,cAC7B,SAAC3B,EAAD,CAAQ0B,KAAK,SAAb,0BAKT,EChDD,EAXc,WACZ,OACE,UAACK,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,OAAlB,WACE,SAACC,EAAA,EAAD,WACE,yCAEF,SAACnB,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Title = styled.h2`\n  margin-bottom: 15px;\n`;\n\nexport const StyledForm = styled(Form)`\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  padding: 20px;\n  border: 1px solid black;\n  color: #ffffff;\n  background: #3f51b5;\n`;\n\nexport const Button = styled.button`\n  margin-top: 20px;\n  padding: 5px 15px;\n  color: #efb343;\n  font-size: 24px;\n  background: transparent;\n  border: 1px solid #efb343;\n  border-radius: 5px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n  &:hover {\n    color: #ffffff;\n    border-color: #ffffff;\n  }\n\n  &:active {\n    box-shadow: 0px 0px 0px rgba(0, 0, 0, 0);\n  }\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n  font-weight: 600;\n`;\n\nexport const Input = styled(Field)`\n  margin-bottom: 20px;\n  width: 100%;\n  height: 35px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  margin-bottom: 10px;\n  color: red;\n`;\n","import { nanoid } from 'nanoid';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  Title,\n  Button,\n  StyledForm,\n  Input,\n  Label,\n  Error,\n} from './LoginForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nconst initialValues = { email: '', password: '' };\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Invalid email')\n    .required('Email is a required field'),\n  password: yup\n    .string()\n    .min(3)\n    .max(10)\n    .required('Password is a required field'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n\n  const HandleSubmit = ({ email, password }, { resetForm }) => {\n    dispatch(logIn({ email, password }));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Title>Please enter login and password</Title>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={HandleSubmit}\n        validationSchema={schema}\n      >\n        <StyledForm>\n          <Label htmlFor={emailInputId}>Email</Label>\n          <Input type=\"text\" name=\"email\" id={emailInputId} />\n          <Error component=\"span\" name=\"email\" />\n          <Label htmlFor={passwordInputId}>Password</Label>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            id={passwordInputId}\n            autoComplete=\"off\"\n          />\n          <Error component=\"span\" name=\"password\" />\n          <Button type=\"submit\">LogIn</Button>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { Box } from 'components/Box';\nimport { LoginForm } from 'components/LoginForm';\n\nconst Login = () => {\n  return (\n    <Box ml=\"50px\" mt=\"20px\">\n      <Helmet>\n        <title>Log in</title>\n      </Helmet>\n      <LoginForm />\n    </Box>\n  );\n};\n\nexport default Login;\n"],"names":["Title","styled","StyledForm","Form","Button","Label","Input","Field","Error","ErrorMessage","initialValues","email","password","schema","yup","shape","required","min","max","LoginForm","dispatch","useDispatch","emailInputId","nanoid","passwordInputId","onSubmit","resetForm","logIn","validationSchema","htmlFor","type","name","id","component","autoComplete","Box","ml","mt","Helmet"],"sourceRoot":""}