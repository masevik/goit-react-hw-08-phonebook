{"version":3,"file":"static/js/1.24842477.chunk.js","mappings":"6NAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EACvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EACnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,E,iDCDpBC,EAAQC,EAAAA,GAAAA,GAAH,gDAILC,EAAgBD,EAAAA,GAAAA,QAAH,wC,SCHbE,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,UAACH,EAAD,YACE,SAACF,EAAD,UAAQI,IACPC,IAGN,E,8BCPYC,GAAaL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,8NAYVO,EAASP,EAAAA,GAAAA,OAAH,+VAmBNQ,EAAQR,EAAAA,GAAAA,MAAH,qEAKLS,GAAQT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,iFAMLW,GAAQX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAH,+D,UC9BZa,EAAgB,CAAEC,KAAM,GAAIC,OAAQ,QAKpCC,EAASC,EAAAA,KAAaC,MAAM,CAChCJ,KAAMG,EAAAA,KAAaE,IAAI,GAAGC,IAAI,IAAIC,SAAS,4BAC3CN,OAAQE,EAAAA,KAELI,WACAC,QAPH,+EAOwB,6BACrBH,IAAI,GAAI,aACRC,IAAI,GAAI,cAGAG,EAAgB,WAC3B,IAAMC,GAAWC,EAAAA,EAAAA,MACXlC,GAAWmC,EAAAA,EAAAA,IAAYrC,GACvBsC,GAAcC,EAAAA,EAAAA,MACdC,GAAaD,EAAAA,EAAAA,MAgBnB,OACE,SAAC,KAAD,CACEf,cAAeA,EACfiB,SAjBiB,SAAC,EAAD,GAAsC,IAAnChB,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,OAAYgB,EAAgB,EAAhBA,UAKxC,GAJqBxC,EAASyC,MAC5B,SAAAC,GAAO,OAAIA,EAAQnB,KAAKoB,sBAAwBpB,EAAKoB,mBAA9C,IAKP,OADAC,EAAAA,GAAAA,MAAYrB,EAAO,4BACZ,EAGTU,GAASY,EAAAA,EAAAA,IAAW,CAAEtB,KAAAA,EAAMC,OAAAA,KAC5BgB,GACD,EAMGM,iBAAkBrB,EAHpB,UAKE,UAACX,EAAD,YACE,SAACG,EAAD,CAAO8B,QAASX,EAAhB,mBACA,SAAClB,EAAD,CAAO8B,KAAK,OAAOzB,KAAK,OAAO0B,GAAIb,KACnC,SAAChB,EAAD,CAAO8B,UAAU,OAAO3B,KAAK,UAC7B,SAACN,EAAD,CAAO8B,QAAST,EAAhB,qBACA,SAACpB,EAAD,CAAO8B,KAAK,MAAMzB,KAAK,SAAS0B,GAAIX,KACpC,SAAClB,EAAD,CAAO8B,UAAU,OAAO3B,KAAK,YAC7B,SAACP,EAAD,CAAQgC,KAAK,SAAb,6BAIP,E,UChEYG,EAAc1C,EAAAA,GAAAA,GAAH,wPAiBX2C,GAAW3C,EAAAA,EAAAA,IAAO4C,EAAAA,IAAP5C,CAAH,+CAIR6C,GAAY7C,EAAAA,EAAAA,IAAO8C,EAAAA,IAAP9C,CAAH,+CAITO,EAASP,EAAAA,GAAAA,OAAH,+V,UCjBN+C,EAAe,WAC1B,IAAMvB,GAAWC,EAAAA,EAAAA,MACXlC,GAAWmC,EAAAA,EAAAA,IAAYrC,GACvBS,GAAS4B,EAAAA,EAAAA,IAAY7B,GACrBH,GAAYgC,EAAAA,EAAAA,IAAYjC,GAExBuD,EAAmBzD,EAASO,QAAO,SAAAmD,GAAI,OAC3CA,EAAKnC,KAAKoC,cAAcC,SAASrD,EADU,IAGvCsD,EAAwB,KAAXtD,EAAgBP,EAAWyD,EAE9C,OACE,8BACGI,EAAWC,OAAS,IACnB,SAACC,EAAA,EAAD,CACEC,MAAM,OACNC,GAAG,OACHC,GAAG,OACHC,GAAG,OACHC,GAAG,OACHC,aAAa,MACbC,GAAG,KACHC,gBAAgB,UARlB,SAUGV,EAAWW,KAAI,gBAAGvB,EAAH,EAAGA,GAAI1B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACd,UAAC2B,EAAD,YACE,6BACE,SAACC,EAAD,IADF,IACgB7B,MAEhB,6BACE,SAAC+B,EAAD,IACC9B,MAEH,SAAC,EAAD,CACEiD,SAAUtE,EACVuE,QAAS,WACPzC,GAAS0C,EAAAA,EAAAA,IAAc1B,GACxB,EAJH,sBARgBA,EADJ,OAuBzB,E,UCxDYhC,EAAQR,EAAAA,GAAAA,MAAH,mIAQLS,EAAQT,EAAAA,GAAAA,MAAH,+HAQLO,EAASP,EAAAA,GAAAA,OAAH,wZCXNmE,GAAS,WACpB,IAAM3C,GAAWC,EAAAA,EAAAA,MACX3B,GAAS4B,EAAAA,EAAAA,IAAY7B,GAErBuE,GAAgBxC,EAAAA,EAAAA,MAOtB,OACE,UAAC0B,EAAA,EAAD,CACEe,QAAQ,OACRC,cAAc,SACdR,gBAAgB,UAChBP,MAAM,QACNK,aAAa,MACbW,GAAG,OANL,WAQE,SAAC,EAAD,CAAOjC,QAAS8B,EAAhB,mCACA,UAACd,EAAA,EAAD,CAAKe,QAAQ,OAAb,WACE,SAAC,EAAD,CACE9B,KAAK,OACLzB,KAAK,SACL0B,GAAI4B,EACJI,MAAO1E,EACP2E,SArBe,SAAAC,GACrB,IAAM5E,EAAS4E,EAAMC,cAAcH,MAAMtB,cACzC1B,GAASoD,EAAAA,EAAAA,IAAc9E,GACxB,KAoBK,SAAC,EAAD,CACEmE,QAAS,WACPzC,GAASoD,EAAAA,EAAAA,IAAc,IACxB,EAHH,wBAUP,E,UCHD,GA/BiB,WACf,IAAMrF,GAAWmC,EAAAA,EAAAA,IAAYrC,GACvBK,GAAYgC,EAAAA,EAAAA,IAAYjC,GACxBG,GAAQ8B,EAAAA,EAAAA,IAAY/B,GACpB6B,GAAWC,EAAAA,EAAAA,MAMjB,OAJAoD,EAAAA,EAAAA,YAAU,WACRrD,GAASsD,EAAAA,EAAAA,MACV,GAAE,CAACtD,KAGF,UAAC8B,EAAA,EAAD,CAAKyB,GAAG,OAAOC,GAAG,OAAOC,GAAG,OAAOV,GAAG,OAAtC,WACE,SAACW,EAAA,EAAD,WACE,gDAEF,SAAChF,EAAD,CAASC,MAAM,YAAf,UACE,SAACoB,EAAD,OAEF,UAACrB,EAAD,CAASC,MAAM,WAAf,UACGZ,EAAS8D,OAAS,IACjB,iCACE,SAACc,GAAD,KACA,SAACpB,EAAD,OAGHrD,IAAcE,IAAS,SAACuF,GAAA,EAAD,SAI/B,C","sources":["redux/selectors.js","components/Section/Section.styled.js","components/Section/Section.jsx","components/PhonebookForm/PhonebookForm.styled.js","components/PhonebookForm/PhonebookForm.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-bottom: 15px;\n`;\n\nexport const StyledSection = styled.section`\n  width: 100%;\n`;\n","import PropTypes from 'prop-types';\nimport { Title, StyledSection } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <StyledSection>\n      <Title>{title}</Title>\n      {children}\n    </StyledSection>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  padding: 20px;\n  border: 1px solid black;\n  color: #ffffff;\n  background: #3f51b5;\n  border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 15px;\n  color: #efb343;\n  font-size: 24px;\n  background: transparent;\n  border: 1px solid #efb343;\n  border-radius: 5px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n  &:hover {\n    color: #ffffff;\n    border-color: #ffffff;\n  }\n\n  &:active {\n    box-shadow: 0px 0px 0px rgba(0, 0, 0, 0);\n  }\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n  font-weight: 600;\n`;\n\nexport const Input = styled(Field)`\n  margin-bottom: 10px;\n  width: 100%;\n  height: 35px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  margin-bottom: 10px;\n  color: red;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport {\n  Button,\n  StyledForm,\n  Input,\n  Label,\n  Error,\n} from './PhonebookForm.styled';\nimport { toast } from 'react-toastify';\n\nconst initialValues = { name: '', number: '+380' };\n\nconst phoneRegExp =\n  /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/;\n\nconst schema = yup.object().shape({\n  name: yup.string().min(3).max(40).required('Name is a required field'),\n  number: yup\n    .string()\n    .required()\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .min(13, 'Too short')\n    .max(13, 'Too long'),\n});\n\nexport const PhonebookForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const nameInputId = nanoid();\n  const telInputId = nanoid();\n\n  const HandleSubmit = ({ name, number }, { resetForm }) => {\n    const isInContacts = contacts.some(\n      contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n    );\n\n    if (isInContacts) {\n      toast.error(name + ' is already in contacts');\n      return false;\n    }\n\n    dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={HandleSubmit}\n      validationSchema={schema}\n    >\n      <StyledForm>\n        <Label htmlFor={nameInputId}>Name</Label>\n        <Input type=\"text\" name=\"name\" id={nameInputId} />\n        <Error component=\"span\" name=\"name\" />\n        <Label htmlFor={telInputId}>Number</Label>\n        <Input type=\"tel\" name=\"number\" id={telInputId} />\n        <Error component=\"span\" name=\"number\" />\n        <Button type=\"submit\">Add contact</Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { RiUser3Line, RiPhoneLine } from 'react-icons/ri';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  color: #ffffff;\n\n  :not(:last-child) {\n    margin-bottom: 5px;\n  }\n\n  span {\n    width: 450px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const UserIcon = styled(RiUser3Line)`\n  margin-right: 10px;\n`;\n\nexport const PhoneIcon = styled(RiPhoneLine)`\n  margin-right: 10px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 15px;\n  color: #efb343;\n  font-size: 14px;\n  background: transparent;\n  border: 1px solid #efb343;\n  border-radius: 5px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n  &:hover {\n    color: #ffffff;\n    border-color: #ffffff;\n  }\n\n  &:active {\n    box-shadow: 0px 0px 0px rgba(0, 0, 0, 0);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter, selectIsLoading } from 'redux/selectors';\nimport { deleteContact } from 'redux/operations';\nimport {\n  ContactItem,\n  UserIcon,\n  PhoneIcon,\n  Button,\n} from './ContactsList.styled';\nimport { Box } from 'components/Box';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n\n  const filteredContacts = contacts.filter(item =>\n    item.name.toLowerCase().includes(filter)\n  );\n  const actualList = filter === '' ? contacts : filteredContacts;\n\n  return (\n    <>\n      {actualList.length > 0 && (\n        <Box\n          width=\"100%\"\n          pl=\"20px\"\n          pr=\"20px\"\n          pt=\"20px\"\n          pb=\"20px\"\n          borderRadius=\"5px\"\n          as=\"ul\"\n          backgroundColor=\"#3f51b5\"\n        >\n          {actualList.map(({ id, name, number }) => (\n            <ContactItem key={id}>\n              <span>\n                <UserIcon /> {name}\n              </span>\n              <span>\n                <PhoneIcon />\n                {number}\n              </span>\n              <Button\n                disabled={isLoading}\n                onClick={() => {\n                  dispatch(deleteContact(id));\n                }}\n              >\n                Delete\n              </Button>\n            </ContactItem>\n          ))}\n        </Box>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  color: #ffffff;\n  margin-left: 20px;\n  margin-top: 20px;\n  margin-bottom: 10px;\n  font-weight: 600;\n`;\n\nexport const Input = styled.input`\n  margin-left: 20px;\n  margin-right: 10px;\n  margin-bottom: 20px;\n  width: 460px;\n  height: 35px;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 35px;\n  margin-right: 20px;\n  padding: 5px 15px;\n  color: #efb343;\n  font-size: 14px;\n  background: transparent;\n  border: 1px solid #efb343;\n  border-radius: 5px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n  &:hover {\n    color: #ffffff;\n    border-color: #ffffff;\n  }\n\n  &:active {\n    box-shadow: 0px 0px 0px rgba(0, 0, 0, 0);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { selectFilter } from 'redux/selectors';\nimport { filterContact } from 'redux/filterSlice';\nimport { Input, Label, Button } from './Filter.styled';\nimport { Box } from 'components/Box';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const filterInputId = nanoid();\n\n  const onFilterChange = event => {\n    const filter = event.currentTarget.value.toLowerCase();\n    dispatch(filterContact(filter));\n  };\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      backgroundColor=\"#3f51b5\"\n      width=\"500px\"\n      borderRadius=\"5px\"\n      mb=\"20px\"\n    >\n      <Label htmlFor={filterInputId}>Find contact by name</Label>\n      <Box display=\"flex\">\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          id={filterInputId}\n          value={filter}\n          onChange={onFilterChange}\n        />\n        <Button\n          onClick={() => {\n            dispatch(filterContact(''));\n          }}\n        >\n          Clear\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectError, selectIsLoading } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/operations';\nimport { Section } from 'components/Section';\nimport { PhonebookForm } from 'components/PhonebookForm';\nimport { ContactsList } from 'components/ContactsList';\nimport { Filter } from 'components/Filter';\nimport { Loader } from 'components/Loader';\nimport { Box } from 'components/Box';\n\nconst Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box ml=\"50px\" mt=\"20px\" mr=\"50px\" mb=\"20px\">\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Section title=\"Phonebook\">\n        <PhonebookForm />\n      </Section>\n      <Section title=\"Contacts\">\n        {contacts.length > 0 && (\n          <>\n            <Filter />\n            <ContactsList />\n          </>\n        )}\n        {isLoading && !error && <Loader />}\n      </Section>\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","Title","styled","StyledSection","Section","title","children","StyledForm","Form","Button","Label","Input","Field","Error","ErrorMessage","initialValues","name","number","schema","yup","shape","min","max","required","matches","PhonebookForm","dispatch","useDispatch","useSelector","nameInputId","nanoid","telInputId","onSubmit","resetForm","some","contact","toLocaleLowerCase","toast","addContact","validationSchema","htmlFor","type","id","component","ContactItem","UserIcon","RiUser3Line","PhoneIcon","RiPhoneLine","ContactsList","filteredContacts","item","toLowerCase","includes","actualList","length","Box","width","pl","pr","pt","pb","borderRadius","as","backgroundColor","map","disabled","onClick","deleteContact","Filter","filterInputId","display","flexDirection","mb","value","onChange","event","currentTarget","filterContact","useEffect","fetchContacts","ml","mt","mr","Helmet","Loader"],"sourceRoot":""}