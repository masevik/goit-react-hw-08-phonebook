{"version":3,"file":"static/js/866.8fb8390d.chunk.js","mappings":"yQAGaA,EAAQC,EAAAA,GAAAA,GAAH,gDAILC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,uMAWVG,EAASH,EAAAA,GAAAA,OAAH,+VAmBNI,EAAQJ,EAAAA,GAAAA,MAAH,qEAKLK,GAAQL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,iFAMLO,GAAQP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,+D,SCpCZS,EAAgB,CAAEC,MAAO,GAAIC,MAAO,GAAIC,SAAU,IAElDC,EAASC,EAAAA,KAAaC,MAAM,CAChCL,MAAOI,EAAAA,KAAaE,IAAI,GAAGC,IAAI,IAAIC,SAAS,6BAC5CP,MAAOG,EAAAA,KAEJH,MAAM,iBACNO,SAAS,6BACZN,SAAUE,EAAAA,KAEPE,IAAI,GACJC,IAAI,IACJC,SAAS,kCAGDC,EAAe,WAC1B,IAAMC,GAAeC,EAAAA,EAAAA,MACfC,GAAeD,EAAAA,EAAAA,MACfE,GAAkBF,EAAAA,EAAAA,MAMxB,OACE,iCACE,SAACtB,EAAD,iDACA,SAAC,KAAD,CACEU,cAAeA,EACfe,SATe,SAAC,EAAD,GAAwC,EAArCd,MAAqC,EAA9BE,UAC7Ba,EAD2D,EAAhBA,YAE5C,EAQKC,iBAAkBb,EAHpB,UAKE,UAACZ,EAAD,YACE,SAACG,EAAD,CAAOuB,QAASP,EAAhB,oBACA,SAACf,EAAD,CAAOuB,KAAK,OAAOC,KAAK,QAAQC,GAAIV,KACpC,SAACb,EAAD,CAAOwB,UAAU,OAAOF,KAAK,WAC7B,SAACzB,EAAD,CAAOuB,QAASL,EAAhB,qBACA,SAACjB,EAAD,CAAOuB,KAAK,QAAQC,KAAK,QAAQC,GAAIR,KACrC,SAACf,EAAD,CAAOwB,UAAU,OAAOF,KAAK,WAC7B,SAACzB,EAAD,CAAOuB,QAASJ,EAAhB,uBACA,SAAClB,EAAD,CACEuB,KAAK,WACLC,KAAK,WACLC,GAAIP,EACJS,aAAa,SAEf,SAACzB,EAAD,CAAOwB,UAAU,OAAOF,KAAK,cAC7B,SAAC1B,EAAD,CAAQyB,KAAK,SAAb,iCAKT,ECjDD,EAXiB,WACf,OACE,UAACK,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,OAAlB,WACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAACjB,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Title = styled.h2`\n  margin-bottom: 15px;\n`;\n\nexport const StyledForm = styled(Form)`\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  padding: 20px;\n  border: 1px solid black;\n  color: #ffffff;\n  background: #3f51b5;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 15px;\n  color: #efb343;\n  font-size: 24px;\n  background: transparent;\n  border: 1px solid #efb343;\n  border-radius: 5px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n  &:hover {\n    color: #ffffff;\n    border-color: #ffffff;\n  }\n\n  &:active {\n    box-shadow: 0px 0px 0px rgba(0, 0, 0, 0);\n  }\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n  font-weight: 600;\n`;\n\nexport const Input = styled(Field)`\n  margin-bottom: 10px;\n  width: 100%;\n  height: 35px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  margin-bottom: 10px;\n  color: red;\n`;\n","import { nanoid } from 'nanoid';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  Title,\n  Button,\n  StyledForm,\n  Input,\n  Label,\n  Error,\n} from './RegisterForm.styled';\n\nconst initialValues = { login: '', email: '', password: '' };\n\nconst schema = yup.object().shape({\n  login: yup.string().min(3).max(10).required('Login is a required field'),\n  email: yup\n    .string()\n    .email('Invalid email')\n    .required('Email is a required field'),\n  password: yup\n    .string()\n    .min(3)\n    .max(10)\n    .required('Password is a required field'),\n});\n\nexport const RegisterForm = () => {\n  const loginInputId = nanoid();\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n\n  const HandleSubmit = ({ login, password }, { resetForm }) => {\n    resetForm();\n  };\n\n  return (\n    <>\n      <Title>Please your data for registration</Title>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={HandleSubmit}\n        validationSchema={schema}\n      >\n        <StyledForm>\n          <Label htmlFor={loginInputId}>Login</Label>\n          <Input type=\"text\" name=\"login\" id={loginInputId} />\n          <Error component=\"span\" name=\"login\" />\n          <Label htmlFor={emailInputId}>E-mail</Label>\n          <Input type=\"email\" name=\"email\" id={emailInputId} />\n          <Error component=\"span\" name=\"email\" />\n          <Label htmlFor={passwordInputId}>Password</Label>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            id={passwordInputId}\n            autoComplete=\"off\"\n          />\n          <Error component=\"span\" name=\"password\" />\n          <Button type=\"submit\">Registration</Button>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { Box } from 'components/Box';\nimport { RegisterForm } from 'components/RegisterForm';\n\nconst Register = () => {\n  return (\n    <Box ml=\"50px\" mt=\"20px\">\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </Box>\n  );\n};\n\nexport default Register;\n"],"names":["Title","styled","StyledForm","Form","Button","Label","Input","Field","Error","ErrorMessage","initialValues","login","email","password","schema","yup","shape","min","max","required","RegisterForm","loginInputId","nanoid","emailInputId","passwordInputId","onSubmit","resetForm","validationSchema","htmlFor","type","name","id","component","autoComplete","Box","ml","mt","Helmet"],"sourceRoot":""}